---
# This file has been generated by `helm template datadog-agent datadog/datadog` from datadog/templates/install_info-configmap.yaml. Please re-run `generate.sh` rather than modifying this file manually.
apiVersion: v1
kind: ConfigMap
metadata:
  name: datadog-installinfo
  namespace: datadog-ns
  labels: {}
  annotations: {}
data:
  install_info: |
    ---
    install_method:
      tool: kubernetes sample manifests
      tool_version: kubernetes sample manifests
      installer_version: kubernetes sample manifests

---
---
# This file has been generated by `helm template datadog-agent datadog/datadog` from datadog/templates/cluster-agent-confd-configmap.yaml. Please re-run `generate.sh` rather than modifying this file manually.
apiVersion: v1
kind: ConfigMap
metadata:
  name: datadog-cluster-agent-confd
  namespace: datadog-ns
  labels: {}
  annotations: {}
data:
  kubernetes_state_core.yaml.default: |-
    init_config:
    instances:
      - collectors:
        - secrets
        - nodes
        - pods
        - services
        - resourcequotas
        - replicationcontrollers
        - limitranges
        - persistentvolumeclaims
        - persistentvolumes
        - namespaces
        - endpoints
        - daemonsets
        - deployments
        - replicasets
        - statefulsets
        - cronjobs
        - jobs
        - horizontalpodautoscalers
        - poddisruptionbudgets
        - storageclasses
        - volumeattachments
        - ingresses
        labels_as_tags:
          {}
        annotations_as_tags:
          {}
---
# This file has been generated by `helm template datadog-agent datadog/datadog` from datadog/templates/system-probe-configmap.yaml. Please re-run `generate.sh` rather than modifying this file manually.
apiVersion: v1
kind: ConfigMap
metadata:
  name: datadog-system-probe-config
  namespace: datadog-ns
  labels: {}
data:
  system-probe.yaml: "system_probe_config:\n  enabled: true\n  debug_port:  0\n  sysprobe_socket: /var/run/sysprobe/sysprobe.sock\n  enable_conntrack: true\n  bpf_debug: false\n  enable_tcp_queue_length: false\n  enable_oom_kill: false\n  collect_dns_stats: true\n  max_tracked_connections: 131072\n  conntrack_max_state_size: 131072\n  runtime_compiler_output_dir: /var/tmp/datadog-agent/system-probe/build\n  kernel_header_download_dir: /var/tmp/datadog-agent/system-probe/kernel-headers\n  apt_config_dir: /host/etc/apt\n  yum_repos_dir: /host/etc/yum.repos.d\n  zypper_repos_dir: /host/etc/zypp/repos.d\n  btf_path: \nnetwork_config:\n  enabled: true\n  conntrack_init_timeout: 10s\nservice_monitoring_config:\n  enabled: false\nruntime_security_config:\n  enabled: true\n  fim_enabled: false\n  socket: /var/run/sysprobe/runtime-security.sock\n  policies:\n    dir: /etc/datadog-agent/runtime-security.d\n  syscall_monitor:\n    enabled: false\n  network:\n    enabled: false\n  activity_dump:\n    enabled: false\n    traced_cgroups_count: 0\n"
---
# This file has been generated by `helm template datadog-agent datadog/datadog` from datadog/templates/system-probe-configmap.yaml. Please re-run `generate.sh` rather than modifying this file manually.
apiVersion: v1
kind: ConfigMap
metadata:
  name: datadog-security
  namespace: datadog-ns
  labels: {}
data:
  system-probe-seccomp.json: |
    {
      "defaultAction": "SCMP_ACT_ERRNO",
      "syscalls": [
        {
          "names": [
            "accept4",
            "access",
            "arch_prctl",
            "bind",
            "bpf",
            "brk",
            "capget",
            "capset",
            "chdir",
            "chmod",
            "clock_gettime",
            "clone",
            "clone3",
            "close",
            "connect",
            "copy_file_range",
            "creat",
            "dup",
            "dup2",
            "dup3",
            "epoll_create",
            "epoll_create1",
            "epoll_ctl",
            "epoll_ctl_old",
            "epoll_pwait",
            "epoll_wait",
            "epoll_wait_old",
            "eventfd",
            "eventfd2",
            "execve",
            "execveat",
            "exit",
            "exit_group",
            "faccessat",
            "faccessat2",
            "fchmod",
            "fchmodat",
            "fchown",
            "fchown32",
            "fchownat",
            "fcntl",
            "fcntl64",
            "flock",
            "fstat",
            "fstat64",
            "fstatfs",
            "fsync",
            "futex",
            "getcwd",
            "getdents",
            "getdents64",
            "getegid",
            "geteuid",
            "getgid",
            "getgroups",
            "getpeername",
            "getpgrp",
            "getpid",
            "getppid",
            "getpriority",
            "getrandom",
            "getresgid",
            "getresgid32",
            "getresuid",
            "getresuid32",
            "getrlimit",
            "getrusage",
            "getsid",
            "getsockname",
            "getsockopt",
            "gettid",
            "gettimeofday",
            "getuid",
            "getxattr",
            "ioctl",
            "ipc",
            "listen",
            "lseek",
            "lstat",
            "lstat64",
            "madvise",
            "mkdir",
            "mkdirat",
            "mmap",
            "mmap2",
            "mprotect",
            "mremap",
            "munmap",
            "nanosleep",
            "newfstatat",
            "open",
            "openat",
            "openat2",
            "pause",
            "perf_event_open",
            "pipe",
            "pipe2",
            "poll",
            "ppoll",
            "prctl",
            "pread64",
            "prlimit64",
            "pselect6",
            "read",
            "readlink",
            "readlinkat",
            "recvfrom",
            "recvmmsg",
            "recvmsg",
            "rename",
            "renameat",
            "renameat2",
            "restart_syscall",
            "rmdir",
            "rseq",
            "rt_sigaction",
            "rt_sigpending",
            "rt_sigprocmask",
            "rt_sigqueueinfo",
            "rt_sigreturn",
            "rt_sigsuspend",
            "rt_sigtimedwait",
            "rt_tgsigqueueinfo",
            "sched_getaffinity",
            "sched_yield",
            "seccomp",
            "select",
            "semtimedop",
            "send",
            "sendmmsg",
            "sendmsg",
            "sendto",
            "set_robust_list",
            "set_tid_address",
            "setgid",
            "setgid32",
            "setgroups",
            "setgroups32",
            "setitimer",
            "setns",
            "setpgid",
            "setrlimit",
            "setsid",
            "setsidaccept4",
            "setsockopt",
            "setuid",
            "setuid32",
            "sigaltstack",
            "socket",
            "socketcall",
            "socketpair",
            "stat",
            "stat64",
            "statfs",
            "symlinkat",
            "sysinfo",
            "tgkill",
            "umask",
            "uname",
            "unlink",
            "unlinkat",
            "wait4",
            "waitid",
            "waitpid",
            "write"
          ],
          "action": "SCMP_ACT_ALLOW",
          "args": null
        },
        {
          "names": [
            "setns"
          ],
          "action": "SCMP_ACT_ALLOW",
          "args": [
            {
              "index": 1,
              "value": 1073741824,
              "valueTwo": 0,
              "op": "SCMP_CMP_EQ"
            }
          ],
          "comment": "",
          "includes": {},
          "excludes": {}
        },
        {
          "names": [
            "kill"
          ],
          "action": "SCMP_ACT_ALLOW",
          "args": [
            {
              "index": 1,
              "value": 0,
              "op": "SCMP_CMP_EQ"
            }
          ],
          "comment": "allow process detection via kill",
          "includes": {},
          "excludes": {}
        }
      ]
    }
---
# This file has been generated by `helm template datadog-agent datadog/datadog` from datadog/templates/daemonset.yaml. Please re-run `generate.sh` rather than modifying this file manually.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: datadog
  namespace: datadog-ns
  labels: {}
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: datadog
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "datadog"
        app.kubernetes.io/instance: "datadog"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: agent
        app: datadog
      name: datadog
      annotations:
        container.apparmor.security.beta.kubernetes.io/system-probe: unconfined
    spec:
      securityContext:
        runAsUser: 0
      hostPID: true
      containers:
        - name: agent
          image: "gcr.io/datadoghq/agent:7.43.0"
          imagePullPolicy: IfNotPresent
          command: ["agent", "run"]
          resources: {}
          ports:
            - containerPort: 8127
              name: dogstatsdport
              protocol: UDP
          env:
            # Needs to be removed when Agent N-2 is built with Golang 1.17
            - name: GODEBUG
              value: x509ignoreCN=0
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "datadog"
                  key: api-key
            - name: DD_AUTH_TOKEN_FILE_PATH
              value: /etc/datadog-agent/auth/token
            - name: KUBERNETES
              value: "yes"
            - name: DD_KUBERNETES_KUBELET_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_TAGS
              value: "env:dev"
            - name: DD_LOG_LEVEL
              value: "INFO"
            # - name : DD_CONTAINER_EXCLUDE
            #   value: "kube_namespace:kube-node-lease kube_namespace:devops-ns kube_namespace:kube-public kube_namespace:kube-system kube_namespace:datadog-ns kube_namespace:traefik-ingress-ns"
            - name: DD_DOGSTATSD_PORT
              value: "8127"
            - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
              value: "true"
            - name: DD_CLUSTER_AGENT_ENABLED
              value: "true"
            - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
              value: datadog-cluster-agent
            - name: DD_CLUSTER_AGENT_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: datadog-cluster-agent
                  key: token
            - name: DD_APM_ENABLED
              value: "true"
            - name: DD_LOGS_ENABLED
              value: "true"
            - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
              value: "true"
            - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
              value: "true"
            - name: DD_LOGS_CONFIG_AUTO_MULTI_LINE_DETECTION
              value: "true"
            - name: DD_HEALTH_PORT
              value: "5555"
            - name: DD_DOGSTATSD_SOCKET
              value: "/var/run/datadog/dsd.socket"
            - name: DD_EXTRA_CONFIG_PROVIDERS
              value: "clusterchecks endpointschecks"
            - name: DD_IGNORE_AUTOCONF
              value: "kubernetes_state"
            - name: DD_EXPVAR_PORT
              value: "6000"
            - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
              value: 'true'
            - name: DD_SYSTEM_PROBE_EXTERNAL
              value: 'true'
            - name: DD_SYSPROBE_SOCKET
              value: /var/run/sysprobe/sysprobe.sock
          volumeMounts:
            - name: sysprobe-socket-dir
              mountPath: /var/run/sysprobe
            - name: installinfo
              subPath: install_info
              mountPath: /etc/datadog-agent/install_info
              readOnly: true
            - name: logdatadog
              mountPath: /var/log/datadog
            - name: tmpdir
              mountPath: /tmp
              readOnly: false
            - name: os-release-file
              mountPath: /host/etc/os-release
              mountPropagation: None
              readOnly: true
            - name: config
              mountPath: /etc/datadog-agent
            - name: auth-token
              mountPath: /etc/datadog-agent/auth
              readOnly: false
            - name: runtimesocketdir
              mountPath: /host/var/run
              mountPropagation: None
              readOnly: true
            - name: dsdsocket
              mountPath: /var/run/datadog
            - name: sysprobe-config
              mountPath: /etc/datadog-agent/system-probe.yaml
              subPath: system-probe.yaml
            - name: procdir
              mountPath: /host/proc
              mountPropagation: None
              readOnly: true
            - name: cgroups
              mountPath: /host/sys/fs/cgroup
              mountPropagation: None
              readOnly: true
            - name: pointerdir
              mountPath: /opt/datadog-agent/run
              mountPropagation: None
            - name: logpodpath
              mountPath: /var/log/pods
              mountPropagation: None
              readOnly: true
            - name: logscontainerspath
              mountPath: /var/log/containers
              mountPropagation: None
              readOnly: true
            - name: logdockercontainerpath
              mountPath: /var/lib/docker/containers
              mountPropagation: None
              readOnly: true
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /live
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /ready
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
        - name: trace-agent
          image: "gcr.io/datadoghq/agent:7.43.0"
          imagePullPolicy: IfNotPresent
          command: ["trace-agent", "-config=/etc/datadog-agent/datadog.yaml"]
          resources: {}
          ports:
            - containerPort: 8126
              hostPort: 8126
              name: traceport
              protocol: TCP
          env:
            # Needs to be removed when Agent N-2 is built with Golang 1.17
            - name: GODEBUG
              value: x509ignoreCN=0
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "datadog"
                  key: api-key
            - name: DD_AUTH_TOKEN_FILE_PATH
              value: /etc/datadog-agent/auth/token
            - name: KUBERNETES
              value: "yes"
            - name: DD_KUBERNETES_KUBELET_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_CLUSTER_AGENT_ENABLED
              value: "true"
            - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
              value: datadog-cluster-agent
            - name: DD_CLUSTER_AGENT_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: datadog-cluster-agent
                  key: token
            - name: DD_LOG_LEVEL
              value: "INFO"
            - name: DD_APM_ENABLED
              value: "true"
            - name: DD_APM_NON_LOCAL_TRAFFIC
              value: "true"
            - name: DD_APM_RECEIVER_PORT
              value: "8126"
            - name: DD_APM_RECEIVER_SOCKET
              value: "/var/run/datadog/apm.socket"
            - name: DD_DOGSTATSD_SOCKET
              value: "/var/run/datadog/dsd.socket"
          volumeMounts:
            - name: config
              mountPath: /etc/datadog-agent
            - name: auth-token
              mountPath: /etc/datadog-agent/auth
              readOnly: true
            - name: procdir
              mountPath: /host/proc
              mountPropagation: None
              readOnly: true
            - name: cgroups
              mountPath: /host/sys/fs/cgroup
              mountPropagation: None
              readOnly: true
            - name: logdatadog
              mountPath: /var/log/datadog
            - name: tmpdir
              mountPath: /tmp
              readOnly: false
            - name: dsdsocket
              mountPath: /var/run/datadog
            - name: runtimesocketdir
              mountPath: /host/var/run
              mountPropagation: None
              readOnly: true
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 15
            tcpSocket:
              port: 8126
            timeoutSeconds: 5
        - name: process-agent
          image: "gcr.io/datadoghq/agent:7.43.0"
          imagePullPolicy: IfNotPresent
          command: ["process-agent", "--cfgpath=/etc/datadog-agent/datadog.yaml"]
          resources: {}
          env:
            # Needs to be removed when Agent N-2 is built with Golang 1.17
            - name: GODEBUG
              value: x509ignoreCN=0
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "datadog"
                  key: api-key
            - name: DD_AUTH_TOKEN_FILE_PATH
              value: /etc/datadog-agent/auth/token
            - name: KUBERNETES
              value: "yes"
            - name: DD_KUBERNETES_KUBELET_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_CLUSTER_AGENT_ENABLED
              value: "true"
            - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
              value: datadog-cluster-agent
            - name: DD_CLUSTER_AGENT_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: datadog-cluster-agent
                  key: token
            - name: DD_PROCESS_AGENT_DISCOVERY_ENABLED
              value: "true"
            - name: DD_LOG_LEVEL
              value: "INFO"
            - name: DD_SYSTEM_PROBE_ENABLED
              value: "true"
            - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
              value: "true"
            - name: DD_DOGSTATSD_SOCKET
              value: "/var/run/datadog/dsd.socket"
            - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
              value: "true"
          volumeMounts:
            - name: config
              mountPath: /etc/datadog-agent
            - name: auth-token
              mountPath: /etc/datadog-agent/auth
              readOnly: true
            - name: logdatadog
              mountPath: /var/log/datadog
            - name: tmpdir
              mountPath: /tmp
              readOnly: false
            - name: os-release-file
              mountPath: /host/etc/os-release
              mountPropagation: None
              readOnly: true
            - name: runtimesocketdir
              mountPath: /host/var/run
              mountPropagation: None
              readOnly: true
            - name: cgroups
              mountPath: /host/sys/fs/cgroup
              mountPropagation: None
              readOnly: true
            - name: passwd
              mountPath: /etc/passwd
              readOnly: true
            - name: procdir
              mountPath: /host/proc
              mountPropagation: None
              readOnly: true
            - name: dsdsocket
              mountPath: /var/run/datadog
              readOnly: true
            - name: sysprobe-socket-dir
              mountPath: /var/run/sysprobe
              readOnly: true
            - name: sysprobe-config
              mountPath: /etc/datadog-agent/system-probe.yaml
              subPath: system-probe.yaml
        - name: system-probe
          image: "gcr.io/datadoghq/agent:7.43.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
                - SYS_RESOURCE
                - SYS_PTRACE
                - NET_ADMIN
                - NET_BROADCAST
                - NET_RAW
                - IPC_LOCK
                - CHOWN
                - DAC_READ_SEARCH
            privileged: false
            seccompProfile:
              type: Localhost
              localhostProfile: system-probe
          command: ["/opt/datadog-agent/embedded/bin/system-probe", "--config=/etc/datadog-agent/system-probe.yaml"]
          env:
            # Needs to be removed when Agent N-2 is built with Golang 1.17
            - name: GODEBUG
              value: x509ignoreCN=0
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "datadog"
                  key: api-key
            - name: DD_AUTH_TOKEN_FILE_PATH
              value: /etc/datadog-agent/auth/token
            - name: KUBERNETES
              value: "yes"
            - name: DD_KUBERNETES_KUBELET_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_LOG_LEVEL
              value: "INFO"
            - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
              value: 'true'
            - name: DD_SYSPROBE_SOCKET
              value: /var/run/sysprobe/sysprobe.sock
            - name: HOST_PROC
              value: /host/proc
          resources: {}
          volumeMounts:
            - name: sysprobe-socket-dir
              mountPath: /var/run/sysprobe
            - name: modules
              mountPath: /lib/modules
              readOnly: true
            - name: src
              mountPath: /usr/src
              readOnly: true
            - name: runtime-compiler-output-dir
              mountPath: /var/tmp/datadog-agent/system-probe/build
            - name: kernel-headers-download-dir
              mountPath: /var/tmp/datadog-agent/system-probe/kernel-headers
              readOnly: false
            - name: apt-config-dir
              mountPath: /host/etc/apt
              readOnly: true
            - name: yum-repos-dir
              mountPath: /host/etc/yum.repos.d
              readOnly: true
            - name: opensuse-repos-dir
              mountPath: /host/etc/zypp
              readOnly: true
            - name: public-key-dir
              mountPath: /host/etc/pki
              readOnly: true
            - name: yum-vars-dir
              mountPath: /host/etc/yum/vars
              readOnly: true
            - name: dnf-vars-dir
              mountPath: /host/etc/dnf/vars
              readOnly: true
            - name: rhel-subscription-dir
              mountPath: /host/etc/rhsm
              readOnly: true
         #########################
            - name: auth-token
              mountPath: /etc/datadog-agent/auth
              readOnly: true
            - name: logdatadog
              mountPath: /var/log/datadog
            - name: tmpdir
              mountPath: /tmp
              readOnly: false
            - name: debugfs
              mountPath: /sys/kernel/debug
              mountPropagation: None
            - name: config
              mountPath: /etc/datadog-agent
            - name: sysprobe-config
              mountPath: /etc/datadog-agent/system-probe.yaml
              subPath: system-probe.yaml
            - name: procdir
              mountPath: /host/proc
              mountPropagation: None
              readOnly: true
            - name: os-release-file
              mountPath: /host/etc/os-release
              mountPropagation: None
              readOnly: true
            - name: etc-redhat-release
              mountPath: /host/etc/redhat-release
              readOnly: true
            - name: etc-fedora-release
              mountPath: /host/etc/fedora-release
              readOnly: true
            - name: etc-lsb-release
              mountPath: /host/etc/lsb-release
              readOnly: true

      initContainers:
        - name: init-volume
          image: "gcr.io/datadoghq/agent:7.43.0"
          imagePullPolicy: IfNotPresent
          command: ["bash", "-c"]
          args:
            - cp -r /etc/datadog-agent /opt
          volumeMounts:
            - name: config
              mountPath: /opt/datadog-agent
          resources: {}
        - name: init-config
          image: "gcr.io/datadoghq/agent:7.43.0"
          imagePullPolicy: IfNotPresent
          command: ["bash", "-c"]
          args:
            - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do bash $script ; done
          volumeMounts:
            - name: logdatadog
              mountPath: /var/log/datadog
            - name: config
              mountPath: /etc/datadog-agent
            - name: procdir
              mountPath: /host/proc
              mountPropagation: None
              readOnly: true
            - name: runtimesocketdir
              mountPath: /host/var/run
              mountPropagation: None
              readOnly: true
            - name: sysprobe-config
              mountPath: /etc/datadog-agent/system-probe.yaml
              subPath: system-probe.yaml
          env:
            # Needs to be removed when Agent N-2 is built with Golang 1.17
            - name: GODEBUG
              value: x509ignoreCN=0
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "datadog"
                  key: api-key
            - name: DD_AUTH_TOKEN_FILE_PATH
              value: /etc/datadog-agent/auth/token
            - name: KUBERNETES
              value: "yes"
            - name: DD_KUBERNETES_KUBELET_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          resources: {}
        - name: seccomp-setup
          image: "gcr.io/datadoghq/agent:7.43.0"
          imagePullPolicy: IfNotPresent
          command:
            - cp
            - /etc/config/system-probe-seccomp.json
            - /host/var/lib/kubelet/seccomp/system-probe
          volumeMounts:
            - name: datadog-agent-security
              mountPath: /etc/config
            - name: seccomp-root
              mountPath: /host/var/lib/kubelet/seccomp
              mountPropagation: None
          resources: {}
      volumes:
        - hostPath:
            path: /lib/modules
          name: modules
        - hostPath:
            path: /usr/src
          name: src
        - hostPath:
            path: /var/tmp/datadog-agent/system-probe/build
          name: runtime-compiler-output-dir
        - hostPath:
            path: /var/tmp/datadog-agent/system-probe/kernel-headers
          name: kernel-headers-download-dir
        - hostPath:
            path: /etc/apt
          name: apt-config-dir
        - hostPath:
            path: /etc/yum.repos.d
          name: yum-repos-dir
        - hostPath:
            path: /etc/zypp
          name: opensuse-repos-dir
        - hostPath:
            path: /etc/pki
          name: public-key-dir
        - hostPath:
            path: /etc/yum/vars
          name: yum-vars-dir
        - hostPath:
            path: /etc/dnf/vars
          name: dnf-vars-dir
        - hostPath:
            path: /etc/rhsm
          name: rhel-subscription-dir
      #####
        - name: auth-token
          emptyDir: {}
        - name: installinfo
          configMap:
            name: datadog-installinfo
        - name: config
          emptyDir: {}
        - name: logdatadog
          emptyDir: {}
        - name: tmpdir
          emptyDir: {}
        - hostPath:
            path: /proc
          name: procdir
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroups
        - hostPath:
            path: /etc/os-release
          name: os-release-file
        - hostPath:
            path: /etc/redhat-release
          name: etc-redhat-release
        - hostPath:
            path: /etc/fedora-release
          name: etc-fedora-release
        - hostPath:
            path: /etc/lsb-release
          name: etc-lsb-release
        - hostPath:
            path: /var/run/datadog/
            type: DirectoryOrCreate
          name: dsdsocket
        - hostPath:
            path: /var/run/datadog/
            type: DirectoryOrCreate
          name: apmsocket
        - name: s6-run
          emptyDir: {}
        - name: sysprobe-config
          configMap:
            name: datadog-system-probe-config
        - name: datadog-agent-security
          configMap:
            name: datadog-security
        - hostPath:
            path: /var/lib/kubelet/seccomp
          name: seccomp-root
        - hostPath:
            path: /sys/kernel/debug
          name: debugfs
        - name: sysprobe-socket-dir
          emptyDir: {}
        - hostPath:
            path: /etc/passwd
          name: passwd
        - hostPath:
            path: /
          name: hostroot
        - hostPath:
            path: /etc/group
          name: group
        - hostPath:
            path: /var/lib/datadog-agent/logs
          name: pointerdir
        - hostPath:
            path: /var/log/pods
          name: logpodpath
        - hostPath:
            path: /var/log/containers
          name: logscontainerspath
        - hostPath:
            path: /var/lib/docker/containers
          name: logdockercontainerpath
        - hostPath:
            path: /var/run
          name: runtimesocketdir
      tolerations:
      affinity: {}
      serviceAccountName: "datadog"
      nodeSelector:
        kubernetes.io/os: linux
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
---
---
# This file has been generated by `helm template datadog-agent datadog/datadog` from datadog/templates/agent-clusterchecks-deployment.yaml. Please re-run `generate.sh` rather than modifying this file manually.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datadog-clusterchecks
  namespace: datadog-ns
  labels: {}
spec:
  replicas: 2
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: datadog-clusterchecks
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "datadog"
        app.kubernetes.io/instance: "datadog"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: clusterchecks-agent
        app: datadog-clusterchecks
      name: datadog-clusterchecks
      annotations: {}
    spec:
      serviceAccountName: datadog-cluster-checks
      imagePullSecrets: []
      initContainers:
        - name: init-volume
          image: "gcr.io/datadoghq/agent:7.43.0"
          imagePullPolicy: IfNotPresent
          command: ["bash", "-c"]
          args:
            - cp -r /etc/datadog-agent /opt
          volumeMounts:
            - name: config
              mountPath: /opt/datadog-agent
          resources: {}
        - name: init-config
          image: "gcr.io/datadoghq/agent:7.43.0"
          imagePullPolicy: IfNotPresent
          command: ["bash", "-c"]
          args:
            - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do bash $script ; done
          volumeMounts:
            - name: config
              mountPath: /etc/datadog-agent
          resources: {}
      containers:
        - name: agent
          image: "gcr.io/datadoghq/agent:7.43.0"
          command: ["bash", "-c"]
          args:
            - rm -rf /etc/datadog-agent/conf.d && touch /etc/datadog-agent/datadog.yaml && exec agent run
          imagePullPolicy: IfNotPresent
          env:
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "datadog"
                  key: api-key
            - name: KUBERNETES
              value: "yes"
            - name: DD_LOG_LEVEL
              value: "INFO"
            - name: DD_EXTRA_CONFIG_PROVIDERS
              value: "clusterchecks"
            - name: DD_HEALTH_PORT
              value: "5557"
            # Cluster checks (cluster-agent communication)
            - name: DD_CLUSTER_AGENT_ENABLED
              value: "true"
            - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
              value: datadog-cluster-agent
            - name: DD_CLUSTER_AGENT_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: datadog-cluster-agent
                  key: token
            # Safely run alongside the daemonset
            - name: DD_ENABLE_METADATA_COLLECTION
              value: "false"
            # Expose CLC stats
            - name: DD_CLC_RUNNER_ENABLED
              value: "true"
            - name: DD_CLC_RUNNER_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DD_CLC_RUNNER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            # Remove unused features
            - name: DD_USE_DOGSTATSD
              value: "false"
            - name: DD_PROCESS_AGENT_ENABLED
              value: "false"
            - name: DD_LOGS_ENABLED
              value: "false"
            - name: DD_APM_ENABLED
              value: "false"
            - name: DD_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources: {}
          volumeMounts:
            - name: installinfo
              subPath: install_info
              mountPath: /etc/datadog-agent/install_info
              readOnly: true
            - name: config
              mountPath: /etc/datadog-agent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /live
              port: 5557
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /ready
              port: 5557
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
      volumes:
        - name: installinfo
          configMap:
            name: datadog-installinfo
        - name: config
          emptyDir: {}
      affinity:
        # Prefer scheduling the runners on different nodes if possible
        # for better checks stability in case of node failure.
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: datadog-clusterchecks
                topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# This file has been generated by `helm template datadog-agent datadog/datadog` from datadog/templates/agent-apiservice.yaml. Please re-run `generate.sh` rather than modifying this file manually.
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.external.metrics.k8s.io
  labels: {}
spec:
  service:
    name: datadog-cluster-agent-metrics-api
    namespace: datadog-ns
    port: 8443
  version: v1beta1
  insecureSkipTLSVerify: true
  group: external.metrics.k8s.io
  groupPriorityMinimum: 100
  versionPriority: 100
---
# This file has been generated by `helm template datadog-agent datadog/datadog` from datadog/templates/cluster-agent-deployment.yaml. Please re-run `generate.sh` rather than modifying this file manually.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datadog-cluster-agent
  namespace: datadog-ns
  labels: {}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: datadog-cluster-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "datadog"
        app.kubernetes.io/instance: "datadog"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: cluster-agent
        app: datadog-cluster-agent
      name: datadog-cluster-agent
      annotations: {}
    spec:
      serviceAccountName: datadog-cluster-agent
      containers:
        - name: cluster-agent
          image: "gcr.io/datadoghq/cluster-agent:7.43.0"
          imagePullPolicy: IfNotPresent
          resources: {}
          ports:
            - containerPort: 5005
              name: agentport
              protocol: TCP
            - containerPort: 5000
              name: agentmetrics
              protocol: TCP
            - containerPort: 8443
              name: metricsapi
              protocol: TCP
          env:
            - name: DD_HEALTH_PORT
              value: "5556"
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "datadog"
                  key: api-key
                  optional: true
            - name: DD_CLUSTER_NAME
              value: "eks-us-east-2-dev3"
            - name: KUBERNETES
              value: "yes"
            - name: DD_APP_KEY
              valueFrom:
                secretKeyRef:
                  name: "datadog-appkey"
                  key: app-key
            - name: DD_EXTERNAL_METRICS_PROVIDER_ENABLED
              value: "true"
            - name: DD_EXTERNAL_METRICS_PROVIDER_PORT
              value: "8443"
            - name: DD_EXTERNAL_METRICS_PROVIDER_WPA_CONTROLLER
              value: "false"
            - name: DD_EXTERNAL_METRICS_PROVIDER_USE_DATADOGMETRIC_CRD
              value: "false"
            - name: DD_EXTERNAL_METRICS_AGGREGATOR
              value: "avg"
            - name: DD_ADMISSION_CONTROLLER_ENABLED
              value: "true"
            - name: DD_ADMISSION_CONTROLLER_MUTATE_UNLABELLED
              value: "false"
            - name: DD_ADMISSION_CONTROLLER_SERVICE_NAME
              value: datadog-cluster-agent-admission-controller
            - name: DD_ADMISSION_CONTROLLER_FAILURE_POLICY
              value: "Ignore"
            - name: DD_CLUSTER_CHECKS_ENABLED
              value: "true"
            - name: DD_EXTRA_CONFIG_PROVIDERS
              value: "kube_endpoints kube_services"
            - name: DD_EXTRA_LISTENERS
              value: "kube_endpoints kube_services"
            - name: DD_LOG_LEVEL
              value: "INFO"
            - name: DD_LEADER_ELECTION
              value: "true"
            - name: DD_LEADER_LEASE_DURATION
              value: "15"
            - name: DD_LEADER_LEASE_NAME
              value: datadog-leader-election
            - name: DD_CLUSTER_AGENT_TOKEN_NAME
              value: datadogtoken
            - name: DD_COLLECT_KUBERNETES_EVENTS
              value: "true"
            - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
              value: datadog-cluster-agent
            - name: DD_CLUSTER_AGENT_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: datadog-cluster-agent
                  key: token
            - name: DD_CLUSTER_AGENT_COLLECT_KUBERNETES_TAGS
              value: "false"
            - name: DD_KUBE_RESOURCES_NAMESPACE
              value: datadog-ns
            - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
              value: "true"
            - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
              value: "true"
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /live
              port: 5556
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /ready
              port: 5556
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: installinfo
              subPath: install_info
              mountPath: /etc/datadog-agent/install_info
              readOnly: true
            - name: confd
              mountPath: /conf.d
              readOnly: true
      volumes:
        - name: installinfo
          configMap:
            name: datadog-installinfo
        - name: confd
          configMap:
            name: datadog-cluster-agent-confd
            items:
              - key: kubernetes_state_core.yaml.default
                path: kubernetes_state_core.yaml.default
      affinity:
        # Prefer scheduling the cluster agents on different nodes
        # to guarantee that the standby instance can immediately take the lead from a leader running of a faulty node.
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: datadog-cluster-agent
                topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
---
# This file has been generated by `helm template datadog-agent datadog/datadog` from datadog/templates/agent-services.yaml. Please re-run `generate.sh` rather than modifying this file manually.
apiVersion: v1
kind: Service
metadata:
  name: datadog-cluster-agent
  namespace: datadog-ns
  labels: {}
spec:
  type: ClusterIP
  selector:
    app: datadog-cluster-agent
  ports:
    - port: 5005
      name: agentport
      protocol: TCP
---
# This file has been generated by `helm template datadog-agent datadog/datadog` from datadog/templates/agent-services.yaml. Please re-run `generate.sh` rather than modifying this file manually.
apiVersion: v1
kind: Service
metadata:
  name: datadog-cluster-agent-admission-controller
  namespace: datadog-ns
  labels:
    app: "datadog"
    chart: "datadog-3.11.0"
    release: "datadog"
    heritage: "Helm"
spec:
  selector:
    app: datadog-cluster-agent
  ports:
    - port: 443
      targetPort: 8000




